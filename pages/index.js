import { useUser, withPageAuthRequired } from "@auth0/nextjs-auth0";
import Head from "next/head";
import IconButton from "../components/IconButton";

import { useEffect, useState } from "react";
import {
  BellIcon,
  CameraIcon,
  SearchIcon,
  UserIcon,
  XIcon,
} from "@heroicons/react/outline";
import Link from "next/link";
import InputField from "../components/InputField";
import MenuLayout from "../components/layouts/MenuLayout";

export default withPageAuthRequired(function Home() {
  const [search, setSearch] = useState(false);
  const [notification, setNotification] = useState(false);
  const [profile, setProfile] = useState(false);
  const [camera, setCamera] = useState(false);

  const { user, error, isLoading } = useUser();

  const [countryCode, setCountryCode] = useState("");
  const [inputField, setInputField] = useState("");

  if (isLoading) return <div>Loading...</div>;
  if (error) return <div>{error.message}</div>;

  useEffect(() => {
    if (navigator.geolocation) {
      navigator.geolocation.getCurrentPosition(onSuccess, onError);
    }
  }, []);

  const onSuccess = (position) => {
    const { latitude, longitude } = position;
    fetch(
      `https://api.bigdatacloud.net/data/reverse-geocode-client?latitude=${latitude}&longitude=${longitude}&localityLanguage=en`
    )
      .then((res) => res.json())
      .then((data) => setCountryCode(data.countryCode));
  };

  const onError = (error) => {
    return <h1>{error}</h1>;
  };

  return (
    <div className="bg-background-color h-screen w-screen">
      <Head>
        <title>Videlo - The video platform you always wanted.</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <header className="p-2 border-b-2 border-bo-color">
        {!search ? (
          <div className="flex items-center justify-between">
            <div className="relative w-max p-2">
              <img src="/videlo.png" alt="Logo" />
              <h1 className="absolute right-1 text-xs text-gray-400 top-0">
                {countryCode}
              </h1>
            </div>
            <div className="flex items-center space-x-2">
              <IconButton Icon={SearchIcon} onClick={() => setSearch(true)} />
              <IconButton Icon={CameraIcon} onClick={() => setCamera(true)} />
              <IconButton
                Icon={BellIcon}
                onClick={() => setNotification(true)}
              />
              <IconButton Icon={UserIcon} onClick={() => setProfile(true)} />
            </div>
            {notification && (
              <MenuLayout
                setMenu={setNotification}
                className="fixed right-14 top-14"
              >
                <h1>Hello</h1>
              </MenuLayout>
            )}
          </div>
        ) : (
          <div className="flex items-center justify-between space-x-5">
            <InputField
              type="text"
              placeholder="Search Videlo"
              Icon={SearchIcon}
              value={inputField}
              setValue={setInputField}
            />
            <IconButton Icon={XIcon} onClick={() => setSearch(false)} />
          </div>
        )}
      </header>
    </div>
  );
});
